algorithm: org.eclipse.elk.layered
edgeRouting: ORTHOGONAL
node tb {
    layout [ size: 50, 80 ]
    portConstraints: FIXED_SIDE
    label "tb"
    port top_isck_m1 { ^port.side: EAST label 'top_isck_m1' }
    port top_isck_m1_export_0 { ^port.side: WEST label 'top_isck_m1_export_0' }
    port top_isck_m2 { ^port.side: EAST label 'top_isck_m2' }
    port top_isck_m2_export_0 { ^port.side: WEST label 'top_isck_m2_export_0' }
    node clk {
        layout [ size: 50, 80 ]
        portConstraints: FIXED_SIDE
        label "clk"
        port clk { ^port.side: EAST label 'clk' }
    }

    node intor_m1 {
        layout [ size: 50, 80 ]
        portConstraints: FIXED_SIDE
        label "intor_m1"
        port clk_i { ^port.side: WEST label 'clk_i' }
        port b_tsck { ^port.side: WEST label 'b_tsck' }
        port isck { ^port.side: EAST label 'isck' }
        node pe {
            layout [ size: 50, 80 ]
            portConstraints: FIXED_SIDE
            label "pe"
            port clk_i { ^port.side: WEST label 'clk_i' }
            port drv_i { ^port.side: WEST label 'drv_i' }
            port drv_o { ^port.side: EAST label 'drv_o' }
        }

        edge tb.intor_m1.clk_i -> tb.intor_m1.pe.clk_i
    }

    node intor_m2 {
        layout [ size: 50, 80 ]
        portConstraints: FIXED_SIDE
        label "intor_m2"
        port clk_i { ^port.side: WEST label 'clk_i' }
        port b_tsck { ^port.side: WEST label 'b_tsck' }
        port isck { ^port.side: EAST label 'isck' }
        node pe {
            layout [ size: 50, 80 ]
            portConstraints: FIXED_SIDE
            label "pe"
            port clk_i { ^port.side: WEST label 'clk_i' }
            port drv_i { ^port.side: WEST label 'drv_i' }
            port drv_o { ^port.side: EAST label 'drv_o' }
        }

        edge tb.intor_m2.clk_i -> tb.intor_m2.pe.clk_i
    }

    node simple_axi_bus {
        layout [ size: 50, 80 ]
        portConstraints: FIXED_SIDE
        label "simple_axi_bus"
        port clk_i { ^port.side: WEST label 'clk_i' }
        port init_socket_0 { ^port.side: EAST label 'init_socket_0' }
        port init_socket_1 { ^port.side: EAST label 'init_socket_1' }
        port target_socket_0 { ^port.side: WEST label 'target_socket_0' }
        port target_socket_1 { ^port.side: WEST label 'target_socket_1' }
    }

    node tgt_s1 {
        layout [ size: 50, 80 ]
        portConstraints: FIXED_SIDE
        label "tgt_s1"
        port clk_i { ^port.side: WEST label 'clk_i' }
        port isck { ^port.side: EAST label 'isck' }
        port tsck { ^port.side: WEST label 'tsck' }
        node pe {
            layout [ size: 50, 80 ]
            portConstraints: FIXED_SIDE
            label "pe"
            port clk_i { ^port.side: WEST label 'clk_i' }
            port fw_o { ^port.side: EAST label 'fw_o' }
            port bw_i { ^port.side: WEST label 'bw_i' }
        }

        edge tb.tgt_s1.clk_i -> tb.tgt_s1.pe.clk_i
    }

    node tgt_s2 {
        layout [ size: 50, 80 ]
        portConstraints: FIXED_SIDE
        label "tgt_s2"
        port clk_i { ^port.side: WEST label 'clk_i' }
        port isck { ^port.side: EAST label 'isck' }
        port tsck { ^port.side: WEST label 'tsck' }
        node pe {
            layout [ size: 50, 80 ]
            portConstraints: FIXED_SIDE
            label "pe"
            port clk_i { ^port.side: WEST label 'clk_i' }
            port fw_o { ^port.side: EAST label 'fw_o' }
            port bw_i { ^port.side: WEST label 'bw_i' }
        }

        edge tb.tgt_s2.clk_i -> tb.tgt_s2.pe.clk_i
    }

    node mem1 {
        layout [ size: 50, 80 ]
        portConstraints: FIXED_SIDE
        label "mem1"
        port ts { ^port.side: WEST label 'ts' }
    }

    node mem2 {
        layout [ size: 50, 80 ]
        portConstraints: FIXED_SIDE
        label "mem2"
        port ts { ^port.side: WEST label 'ts' }
    }

    edge tb.top_isck_m1 -> tb.intor_m1.b_tsck
    edge tb.top_isck_m2 -> tb.intor_m2.b_tsck
    edge tb.clk.clk -> tb.intor_m1.clk_i
    edge tb.clk.clk -> tb.intor_m2.clk_i
    edge tb.clk.clk -> tb.simple_axi_bus.clk_i
    edge tb.clk.clk -> tb.tgt_s1.clk_i
    edge tb.clk.clk -> tb.tgt_s2.clk_i
    edge tb.intor_m1.isck -> tb.simple_axi_bus.target_socket_0
    edge tb.intor_m1.isck -> tb.simple_axi_bus.target_socket_1
    edge tb.intor_m2.isck -> tb.simple_axi_bus.target_socket_0
    edge tb.intor_m2.isck -> tb.simple_axi_bus.target_socket_1
    edge tb.simple_axi_bus.init_socket_0 -> tb.tgt_s1.tsck
    edge tb.simple_axi_bus.init_socket_1 -> tb.tgt_s2.tsck
    edge tb.tgt_s1.isck -> tb.mem1.ts
    edge tb.tgt_s2.isck -> tb.mem2.ts
}

